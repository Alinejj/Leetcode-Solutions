class Solution {
public:
    int romanToInt(string s) {
        unordered_map<char, int> roman = {
        {'I', 1},
        {'V', 5},
        {'X', 10},
        {'L', 50},
        {'C', 100},
        {'D', 500},
        {'M', 1000}
        };

        int sum = 0;
        int n = s.size();
        int i = 0;
        //n-1 so it doesnt go out of bound
        while (i < n ){
            if( i < n-1 && roman[s[i]] < roman[s[i+1]] ){
                sum += roman[s[i+1]] - roman[s[i]];
                i += 2;
            }
            else{
                sum += roman[s[i]];
                i+=1;
            }
        }
        return sum;
    }
};
